diff --git README.md README.md
index 1da0428..7657c0f 100644
--- README.md
+++ README.md
@@ -13,8 +13,8 @@ Ready to run in production? Please [check our deployment guides](https://hexdocs
 
 ## Learn more
 
-  * Official website: https://www.phoenixframework.org/
+  * Official website: http://www.phoenixframework.org/
   * Guides: https://hexdocs.pm/phoenix/overview.html
   * Docs: https://hexdocs.pm/phoenix
-  * Forum: https://elixirforum.com/c/phoenix-forum
+  * Mailing list: http://groups.google.com/group/phoenix-talk
   * Source: https://github.com/phoenixframework/phoenix
diff --git assets/package.json assets/package.json
index cd2bb9a..48633fd 100644
--- assets/package.json
+++ assets/package.json
@@ -13,12 +13,12 @@
     "@babel/core": "^7.0.0",
     "@babel/preset-env": "^7.0.0",
     "babel-loader": "^8.0.0",
-    "copy-webpack-plugin": "^5.1.1",
-    "css-loader": "^3.4.2",
-    "mini-css-extract-plugin": "^0.9.0",
+    "copy-webpack-plugin": "^4.5.0",
+    "css-loader": "^2.1.1",
+    "mini-css-extract-plugin": "^0.4.0",
     "optimize-css-assets-webpack-plugin": "^5.0.1",
-    "terser-webpack-plugin": "^2.3.2",
-    "webpack": "4.41.5",
+    "terser-webpack-plugin": "^1.1.0",
+    "webpack": "4.4.0",
     "webpack-cli": "^3.3.2"
   }
 }
diff --git config/config.exs config/config.exs
index c4d402f..25fe438 100644
--- config/config.exs
+++ config/config.exs
@@ -15,8 +15,7 @@ config :sample_app, SampleAppWeb.Endpoint,
   url: [host: "localhost"],
   secret_key_base: "aaaaaaaa",
   render_errors: [view: SampleAppWeb.ErrorView, accepts: ~w(html json)],
-  pubsub: [name: SampleApp.PubSub, adapter: Phoenix.PubSub.PG2],
-  live_view: [signing_salt: "HLj/7Yzm"]
+  pubsub: [name: SampleApp.PubSub, adapter: Phoenix.PubSub.PG2]
 
 # Configures Elixir's Logger
 config :logger, :console,
diff --git config/dev.exs config/dev.exs
index 254648d..217905f 100644
--- config/dev.exs
+++ config/dev.exs
@@ -60,7 +60,7 @@ config :sample_app, SampleAppWeb.Endpoint,
     patterns: [
       ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
       ~r"priv/gettext/.*(po)$",
-      ~r"lib/sample_app_web/(live|views)/.*(ex)$",
+      ~r"lib/sample_app_web/{live,views}/.*(ex)$",
       ~r"lib/sample_app_web/templates/.*(eex)$"
     ]
   ]
diff --git config/prod.exs config/prod.exs
index 1e3a375..60dd11b 100644
--- config/prod.exs
+++ config/prod.exs
@@ -25,11 +25,11 @@ config :logger, level: :info
 #       ...
 #       url: [host: "example.com", port: 443],
 #       https: [
+#         :inet6,
 #         port: 443,
 #         cipher_suite: :strong,
 #         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
-#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH"),
-#         transport_options: [socket_opts: [:inet6]]
+#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH")
 #       ]
 #
 # The `cipher_suite` is set to `:strong` to support only the
diff --git config/prod.secret.exs config/prod.secret.exs
index 95aaebb..b7149ee 100644
--- config/prod.secret.exs
+++ config/prod.secret.exs
@@ -24,10 +24,7 @@ secret_key_base =
     """
 
 config :sample_app, SampleAppWeb.Endpoint,
-  http: [
-    port: String.to_integer(System.get_env("PORT") || "4000"),
-    transport_options: [socket_opts: [:inet6]]
-  ],
+  http: [:inet6, port: String.to_integer(System.get_env("PORT") || "4000")],
   secret_key_base: "aaaaaaaa"
 
 # ## Using releases (Elixir v1.9+)
diff --git lib/sample_app_web/endpoint.ex lib/sample_app_web/endpoint.ex
index fa783dc..b8aa4a6 100644
--- lib/sample_app_web/endpoint.ex
+++ lib/sample_app_web/endpoint.ex
@@ -1,15 +1,6 @@
 defmodule SampleAppWeb.Endpoint do
   use Phoenix.Endpoint, otp_app: :sample_app
 
-  # The session will be stored in the cookie and signed,
-  # this means its contents can be read but not tampered with.
-  # Set :encryption_salt if you would also like to encrypt it.
-  @session_options [
-    store: :cookie,
-    key: "_sample_app_key",
-    signing_salt: "aaaaaaaa"
-  ]
-
   socket "/socket", SampleAppWeb.UserSocket,
     websocket: true,
     longpoll: false
@@ -42,6 +33,14 @@ defmodule SampleAppWeb.Endpoint do
 
   plug Plug.MethodOverride
   plug Plug.Head
-  plug Plug.Session, @session_options
+
+  # The session will be stored in the cookie and signed,
+  # this means its contents can be read but not tampered with.
+  # Set :encryption_salt if you would also like to encrypt it.
+  plug Plug.Session,
+    store: :cookie,
+    key: "_sample_app_key",
+    signing_salt: "aaaaaaaa"
+
   plug SampleAppWeb.Router
 end
diff --git lib/sample_app_web/templates/layout/app.html.eex lib/sample_app_web/templates/layout/app.html.eex
index 30e612b..57a6418 100644
--- lib/sample_app_web/templates/layout/app.html.eex
+++ lib/sample_app_web/templates/layout/app.html.eex
@@ -4,9 +4,8 @@
     <meta charset="utf-8"/>
     <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
     <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
-    <title><%= assigns[:page_title] || "SampleApp · Phoenix Framework" %></title>
+    <title>SampleApp · Phoenix Framework</title>
     <link rel="stylesheet" href="<%= Routes.static_path(@conn, "/css/app.css") %>"/>
-    <%= csrf_meta_tag() %>
   </head>
   <body>
     <header>
@@ -16,7 +15,7 @@
             <li><a href="https://hexdocs.pm/phoenix/overview.html">Get Started</a></li>
           </ul>
         </nav>
-        <a href="https://phoenixframework.org/" class="phx-logo">
+        <a href="http://phoenixframework.org/" class="phx-logo">
           <img src="<%= Routes.static_path(@conn, "/images/phoenix.png") %>" alt="Phoenix Framework Logo"/>
         </a>
       </section>
diff --git lib/sample_app_web/views/error_helpers.ex lib/sample_app_web/views/error_helpers.ex
index 7bb8bdf..788d905 100644
--- lib/sample_app_web/views/error_helpers.ex
+++ lib/sample_app_web/views/error_helpers.ex
@@ -10,10 +10,7 @@ defmodule SampleAppWeb.ErrorHelpers do
   """
   def error_tag(form, field) do
     Enum.map(Keyword.get_values(form.errors, field), fn error ->
-      content_tag(:span, translate_error(error),
-        class: "help-block",
-        data: [phx_error_for: input_id(form, field)]
-      )
+      content_tag(:span, translate_error(error), class: "help-block")
     end)
   end
 
diff --git mix.exs mix.exs
index 0b34fb9..d37b482 100644
--- mix.exs
+++ mix.exs
@@ -33,7 +33,7 @@ defmodule SampleApp.MixProject do
   # Type `mix help deps` for examples and options.
   defp deps do
     [
-      {:phoenix, "~> 1.4.14"},
+      {:phoenix, "~> 1.4.11"},
       {:phoenix_pubsub, "~> 1.1"},
       {:phoenix_ecto, "~> 4.0"},
       {:ecto_sql, "~> 3.1"},
diff --git test/sample_app_web/views/layout_view_test.exs test/sample_app_web/views/layout_view_test.exs
index 518823f..6125800 100644
--- test/sample_app_web/views/layout_view_test.exs
+++ test/sample_app_web/views/layout_view_test.exs
@@ -1,8 +1,3 @@
 defmodule SampleAppWeb.LayoutViewTest do
   use SampleAppWeb.ConnCase, async: true
-
-  # When testing helpers, you may want to import Phoenix.HTML and
-  # use functions such as safe_to_string() to convert the helper
-  # result into an HTML string.
-  # import Phoenix.HTML
 end
diff --git test/support/channel_case.ex test/support/channel_case.ex
index 1e12c94..d199879 100644
--- test/support/channel_case.ex
+++ test/support/channel_case.ex
@@ -8,11 +8,9 @@ defmodule SampleAppWeb.ChannelCase do
   to build common data structures and query the data layer.
 
   Finally, if the test case interacts with the database,
-  we enable the SQL sandbox, so changes done to the database
-  are reverted at the end of every test. If you are using
-  PostgreSQL, you can even run database tests asynchronously
-  by setting `use SampleAppWeb.ChannelCase, async: true`, although
-  this option is not recommended for other databases.
+  it cannot be async. For this reason, every test runs
+  inside a transaction which is reset at the beginning
+  of the test unless the test case is marked as async.
   """
 
   use ExUnit.CaseTemplate
diff --git test/support/conn_case.ex test/support/conn_case.ex
index f03645b..fbe0af6 100644
--- test/support/conn_case.ex
+++ test/support/conn_case.ex
@@ -12,7 +12,7 @@ defmodule SampleAppWeb.ConnCase do
   are reverted at the end of every test. If you are using
   PostgreSQL, you can even run database tests asynchronously
   by setting `use SampleAppWeb.ConnCase, async: true`, although
-  this option is not recommended for other databases.
+  this option is not recommendded for other databases.
   """
 
   use ExUnit.CaseTemplate
diff --git test/support/data_case.ex test/support/data_case.ex
index 11a105f..42988a0 100644
--- test/support/data_case.ex
+++ test/support/data_case.ex
@@ -10,8 +10,8 @@ defmodule SampleApp.DataCase do
   we enable the SQL sandbox, so changes done to the database
   are reverted at the end of every test. If you are using
   PostgreSQL, you can even run database tests asynchronously
-  by setting `use SampleApp.DataCase, async: true`, although
-  this option is not recommended for other databases.
+  by setting `use SampleAppWeb.DataCase, async: true`, although
+  this option is not recommendded for other databases.
   """
 
   use ExUnit.CaseTemplate
