diff --git README.md README.md
index ae0a073..c3f1951 100644
--- README.md
+++ README.md
@@ -2,7 +2,9 @@
 
 To start your Phoenix server:
 
-  * Setup the project with `mix setup`
+  * Install dependencies with `mix deps.get`
+  * Create and migrate your database with `mix ecto.setup`
+  * Install Node.js dependencies with `npm install` inside the `assets` directory
   * Start Phoenix endpoint with `mix phx.server`
 
 Now you can visit [`localhost:4000`](http://localhost:4000) from your browser.
diff --git assets/css/app.css assets/css/app.scss
similarity index 100%
rename from data/sample-app/1.5.0-rc.0/assets/css/app.css
rename to data/sample-app/1.5.2/assets/css/app.scss
diff --git assets/js/app.js assets/js/app.js
index 4195b56..dc8033b 100644
--- assets/js/app.js
+++ assets/js/app.js
@@ -1,7 +1,7 @@
 // We need to import the CSS so that webpack will load it.
 // The MiniCssExtractPlugin is used to separate it out into
 // its own CSS file.
-import "../css/app.css"
+import "../css/app.scss"
 
 // webpack automatically bundles all modules in your
 // entry points. Those entry points can be configured
diff --git assets/package.json assets/package.json
index 2edc95d..8f7026f 100644
--- assets/package.json
+++ assets/package.json
@@ -18,6 +18,8 @@
     "babel-loader": "^8.0.0",
     "copy-webpack-plugin": "^5.1.1",
     "css-loader": "^3.4.2",
+    "sass-loader": "^8.0.2",
+    "node-sass": "^4.13.1",
     "mini-css-extract-plugin": "^0.9.0",
     "optimize-css-assets-webpack-plugin": "^5.0.1",
     "terser-webpack-plugin": "^2.3.2",
diff --git assets/webpack.config.js assets/webpack.config.js
index 1be6e21..dd77c3d 100644
--- assets/webpack.config.js
+++ assets/webpack.config.js
@@ -34,16 +34,12 @@ module.exports = (env, options) => {
           }
         },
         {
-          test: /\.css$/,
+          test: /\.[s]?css$/,
           use: [
             MiniCssExtractPlugin.loader,
-            {
-              loader: 'css-loader',
-              options: {
-                sourceMap: devMode
-              }
-            }
-          ]
+            'css-loader',
+            'sass-loader',
+          ],
         }
       ]
     },
diff --git lib/sample_app_web/telemetry.ex lib/sample_app_web/telemetry.ex
index bc2d117..6350dfa 100644
--- lib/sample_app_web/telemetry.ex
+++ lib/sample_app_web/telemetry.ex
@@ -9,6 +9,8 @@ defmodule SampleAppWeb.Telemetry do
   @impl true
   def init(_arg) do
     children = [
+      # Telemetry poller will execute the given period measurements
+      # every 10_000ms. Learn more here: https://hexdocs.pm/telemetry_metrics
       {:telemetry_poller, measurements: periodic_measurements(), period: 10_000}
       # Add reporters as children of your supervision tree.
       # {Telemetry.Metrics.ConsoleReporter, metrics: metrics()}
diff --git lib/sample_app_web/templates/layout/root.html.leex lib/sample_app_web/templates/layout/root.html.leex
index fd5319e..02f5448 100644
--- lib/sample_app_web/templates/layout/root.html.leex
+++ lib/sample_app_web/templates/layout/root.html.leex
@@ -6,8 +6,8 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
     <%= csrf_meta_tag() %>
     <%= live_title_tag assigns[:page_title] || "SampleApp", suffix: " Â· Phoenix Framework" %>
-    <link rel="stylesheet" href="<%= Routes.static_path(@conn, "/css/app.css") %>"/>
-    <script defer type="text/javascript" src="<%= Routes.static_path(@conn, "/js/app.js") %>"></script>
+    <link phx-track-static rel="stylesheet" href="<%= Routes.static_path(@conn, "/css/app.css") %>"/>
+    <script defer phx-track-static type="text/javascript" src="<%= Routes.static_path(@conn, "/js/app.js") %>"></script>
   </head>
   <body>
     <header>
diff --git lib/sample_app_web.ex lib/sample_app_web.ex
index 78548ec..2bf6fe2 100644
--- lib/sample_app_web.ex
+++ lib/sample_app_web.ex
@@ -34,7 +34,8 @@ defmodule SampleAppWeb do
         namespace: SampleAppWeb
 
       # Import convenience functions from controllers
-      import Phoenix.Controller, only: [get_flash: 1, get_flash: 2, view_module: 1]
+      import Phoenix.Controller,
+        only: [get_flash: 1, get_flash: 2, view_module: 1, view_template: 1]
 
       # Include shared imports and aliases for views
       unquote(view_helpers())
@@ -80,9 +81,12 @@ defmodule SampleAppWeb do
       # Use all HTML functionality (forms, tags, etc)
       use Phoenix.HTML
 
-      # Import convenience functions for LiveView rendering
+      # Import LiveView helpers (live_render, live_component, live_patch, etc)
       import Phoenix.LiveView.Helpers
 
+      # Import basic rendering functionality (render, render_layout, etc)
+      import Phoenix.View
+
       import SampleAppWeb.ErrorHelpers
       import SampleAppWeb.Gettext
       alias SampleAppWeb.Router.Helpers, as: Routes
diff --git mix.exs mix.exs
index 52ea030..7a682a2 100644
--- mix.exs
+++ mix.exs
@@ -33,7 +33,7 @@ defmodule SampleApp.MixProject do
   # Type `mix help deps` for examples and options.
   defp deps do
     [
-      {:phoenix, "~> 1.5.0-rc.0", override: true},
+      {:phoenix, "~> 1.5.2"},
       {:phoenix_ecto, "~> 4.1"},
       {:ecto_sql, "~> 3.4"},
       {:postgrex, ">= 0.0.0"},
@@ -41,7 +41,7 @@ defmodule SampleApp.MixProject do
       {:floki, ">= 0.0.0", only: :test},
       {:phoenix_html, "~> 2.11"},
       {:phoenix_live_reload, "~> 1.2", only: :dev},
-      {:phoenix_live_dashboard, "~> 0.1.0"},
+      {:phoenix_live_dashboard, "~> 0.2.0"},
       {:telemetry_metrics, "~> 0.4"},
       {:telemetry_poller, "~> 0.4"},
       {:gettext, "~> 0.11"},
@@ -61,7 +61,7 @@ defmodule SampleApp.MixProject do
       setup: ["deps.get", "ecto.setup", "cmd npm install --prefix assets"],
       "ecto.setup": ["ecto.create", "ecto.migrate", "run priv/repo/seeds.exs"],
       "ecto.reset": ["ecto.drop", "ecto.setup"],
-      test: ["ecto.create --quiet", "ecto.migrate", "test"]
+      test: ["ecto.create --quiet", "ecto.migrate --quiet", "test"]
     ]
   end
 end
