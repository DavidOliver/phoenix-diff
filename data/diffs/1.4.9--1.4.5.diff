diff --git assets/webpack.config.js assets/webpack.config.js
index 63c1d20..45ab14f 100644
--- assets/webpack.config.js
+++ assets/webpack.config.js
@@ -13,7 +13,7 @@ module.exports = (env, options) => ({
     ]
   },
   entry: {
-    './js/app.js': glob.sync('./vendor/**/*.js').concat(['./js/app.js'])
+      './js/app.js': ['./js/app.js'].concat(glob.sync('./vendor/**/*.js'))
   },
   output: {
     filename: 'app.js',
diff --git config/prod.exs config/prod.exs
index 60dd11b..ead09c8 100644
--- config/prod.exs
+++ config/prod.exs
@@ -50,6 +50,16 @@ config :logger, level: :info
 #
 # Check `Plug.SSL` for all available options in `force_ssl`.
 
+# ## Using releases (Elixir v1.9+)
+#
+# If you are doing OTP releases, you need to instruct Phoenix
+# to start each relevant endpoint:
+#
+#     config :sample_app, SampleAppWeb.Endpoint, server: true
+#
+# Then you can assemble a release by calling `mix release`.
+# See `mix help release` for more information.
+
 # Finally import the config/prod.secret.exs which loads secrets
 # and configuration from environment variables.
 import_config "prod.secret.exs"
diff --git config/prod.secret.exs config/prod.secret.exs
index b7149ee..dc5b6f0 100644
--- config/prod.secret.exs
+++ config/prod.secret.exs
@@ -1,7 +1,8 @@
-# In this file, we load production configuration and secrets
-# from environment variables. You can also hardcode secrets,
-# although such is generally not recommended and you have to
-# remember to add this file to your .gitignore.
+# In this file, we load production configuration and
+# secrets from environment variables. You can also
+# hardcode secrets, although such is generally not
+# recommended and you have to remember to add this
+# file to your .gitignore.
 use Mix.Config
 
 database_url =
@@ -26,13 +27,3 @@ secret_key_base =
 config :sample_app, SampleAppWeb.Endpoint,
   http: [:inet6, port: String.to_integer(System.get_env("PORT") || "4000")],
   secret_key_base: "aaaaaaaa"
-
-# ## Using releases (Elixir v1.9+)
-#
-# If you are doing OTP releases, you need to instruct Phoenix
-# to start each relevant endpoint:
-#
-#     config :sample_app, SampleAppWeb.Endpoint, server: true
-#
-# Then you can assemble a release by calling `mix release`.
-# See `mix help release` for more information.
diff --git lib/sample_app_web/endpoint.ex lib/sample_app_web/endpoint.ex
index b8aa4a6..92ca519 100644
--- lib/sample_app_web/endpoint.ex
+++ lib/sample_app_web/endpoint.ex
@@ -24,7 +24,7 @@ defmodule SampleAppWeb.Endpoint do
   end
 
   plug Plug.RequestId
-  plug Plug.Telemetry, event_prefix: [:phoenix, :endpoint]
+  plug Plug.Logger
 
   plug Plug.Parsers,
     parsers: [:urlencoded, :multipart, :json],
diff --git mix.exs mix.exs
index 99e06f1..9269afe 100644
--- mix.exs
+++ mix.exs
@@ -33,10 +33,10 @@ defmodule SampleApp.MixProject do
   # Type `mix help deps` for examples and options.
   defp deps do
     [
-      {:phoenix, "~> 1.4.9"},
+      {:phoenix, "~> 1.4.5"},
       {:phoenix_pubsub, "~> 1.1"},
       {:phoenix_ecto, "~> 4.0"},
-      {:ecto_sql, "~> 3.1"},
+      {:ecto_sql, "~> 3.0"},
       {:postgrex, ">= 0.0.0"},
       {:phoenix_html, "~> 2.11"},
       {:phoenix_live_reload, "~> 1.2", only: :dev},
diff --git test/support/data_case.ex test/support/data_case.ex
index ef81ce3..7ad0f52 100644
--- test/support/data_case.ex
+++ test/support/data_case.ex
@@ -46,7 +46,7 @@ defmodule SampleApp.DataCase do
   def errors_on(changeset) do
     Ecto.Changeset.traverse_errors(changeset, fn {message, opts} ->
       Regex.replace(~r"%{(\w+)}", message, fn _, key ->
-        opts |> Keyword.get(String.to_existing_atom(key), key) |> to_string()
+        opts |> Map.get(String.to_existing_atom(key), key) |> to_string()
       end)
     end)
   end
